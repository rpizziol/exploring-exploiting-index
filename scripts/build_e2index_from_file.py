import os
import pickle
import sys
sys.path.append(os.path.join(os.path.dirname(__file__), '..'))
from e2index.e2index import *


# %%import os
# or 'iuss pavia'

# Get a list of all csv files in the current directory
def build_index_from_csv(which_dir='imt'):
    dir_path = os.path.join(os.path.dirname(__file__), '..', 'data', 'csv', which_dir)

    csv_files = [f for f in os.listdir(dir_path) if f.endswith('.csv')]

    distanze = []
    h_indexes = []

    for file in csv_files:


        filename = os.path.join(dir_path, file)

        database = pd.read_csv(filename)

        # Clean the data
        clean_data = clean_csv(['Abstract', 'Cited by'], database)

        # Calculate the vectors
        docs = calculate_vectors(clean_data['Abstract'])

        # Calculate the cosine distance
        distanze.append(calculate_cosine_distance(docs))
        h_indexes.append(h_index(clean_data['Cited by']))

        distances = dict(zip(csv_files, zip(distanze, h_indexes)))

    return distances


# %%
if __name__ == "__main__":
    dict_distanze = build_index_from_csv()

    path_to_pickle = os.path.join(os.path.dirname(__file__),
                                  '..', 'data', 'pkl', 'dict_distanze.pickle', )

    with open(path_to_pickle, 'wb') as handle:
        pickle.dump(dict_distanze, handle, protocol=pickle.HIGHEST_PROTOCOL)
