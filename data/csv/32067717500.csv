doi,citedby_count,description,author_names,author_ids
10.1109/TDSC.2023.3236798,3,"The rising of the Cyber-Physical System (CPS) and the Industry 4.0 paradigms demands the design and implementation of Digital Twin Frameworks (DTFs) that may support the quick build of reliable Digital Twins (DTs) for experimental and testing purposes. Most of the current DTF proposals allow the generation of DTs at a good pace but affect generality, scalability, portability, and completeness. As a consequence, current DTF are mostly domain-specific and hardly span several application domains (e.g., from simple IoT deployments to the modeling of complex critical infrastructures). Furthermore, the generated DTs often requires a high amount of computational resource to run. In this paper, we present LiDiTE, a solution based on a novel reference model for general-purpose DTFs. LiDiTE overcomes the limitations of state-of-the-art tools by supporting the fine-grained development of real-world complexity scenarios. To achieve that, LiDiTE builds on technologies that favor scalability, reuse, and extensibility of scenarios. We show such features by building the DT of real critical infrastructure and evaluating the performance of our DT against those of the real system. Further contributions of this paper include open access to the source code of LiDiTE and the experimental dataset.","Russo, Enrico;Costa, Gabriele;Longo, Giacomo;Armando, Alessandro;Merlo, Alessio",57197855120;32067717500;57468566600;57190072464;15136674200
10.1145/3600160.3605009,0,"The gender gap is one of the main concerns in the IT sector, in general, and in cybersecurity, in particular. Although well known, the problem is multifaceted and some of its root causes may be found in the education system. In the last years, many initiatives have been proposed targeting high-school students that might be interested in cybersecurity. Many of these programs rely on capture-the-flag (CTF) competitions to gradually form technical skills in an entertaining way. Despite these efforts, however, the number of girls that attend and complete these programs is still often unsatisfactory. In this work, we present the most significant outcomes of CyberTrials, a CTF-based cybersecurity program for Italian high school girls that this year enrolled 941 students. The two main features of CyberTrials are its peculiar organization and its gaming platform, which introduces some crucial novelties w.r.t. other similar initiatives. Both these aspects are presented and discussed in this paper. The results show that our methodology could effectively engage the participants and that when properly organized, CTF-based events have the potential to catalyze the learning process.","Costa, Gabriele;De Francisci, Silvia;Valiani, Serenella;Prinetto, Paolo",32067717500;35847465800;57893691300;7005222576
10.1016/j.cose.2023.103133,0,"Physical layer security mechanisms use primitives that exploit physical properties of the communication channel to protect data. Protecting communications at the physical layer offers some advantages, e.g., in terms of reduced computations, since complex cryptographic procedures are not executed, However, these mechanisms lack a formal specification that prevent protocols and applications that use them from being verified and compared with those based on cyptography. Here we start filling this gap by providing an axiomatization of key physical layer security primitives and proposing a variant of the Dolevâ€“Yao attacker model that takes them into account. We show that our formalization enables applying existing automatic tools for verifying security of protocols. Then, we show that these primitives are a valuable alternative and effective complement to cryptography, because they ensure confidentiality and integrity but require a lower energy consumption and often they also reduce transmission time. Finally, we characterize the specific application domains and network features that make adopting these security mechanisms particularly profitable with respect to the AES cypher.","Costa, Gabriele;Degano, Pierpaolo;Galletta, Letterio;Soderi, Simone",32067717500;7006345611;55260418300;56027760800
,0,"Network scanning is a common task in cybersecurity. For instance, penetration testers often scan a target system during the initial stage of their vulnerability detection process, e.g., for profiling machines and services. On the other hand, attackers scan remote systems looking for exploitation opportunities. Network scans are generally considered harmless for the victim, as they only consist of a few requests that cause no service interruption or degradation. Nevertheless, as shown in [1], scanning is risky for its author. In this paper, we present a general attack framework that takes advantage of network scans for injecting remote systems. In particular, our proposal leverages the widely adopted scanner Nmap [2] for transmitting attack payloads through the scan responses. If the output of Nmap is processed by an injectable application, e.g., a web browser of a SQL DBMS, our payloads are executed and the scanning system gets compromised.","Bonfiglio, Alessandro;Costa, Gabriele;De Francisci, Silvia",58648035800;32067717500;35847465800
10.58346/JOWUA.2022.I4.004,12,"A cyber range (CR) is an environment used for training security experts and testing attack and defense tools and procedures. Usually, a cyber range simulates one or more critical infrastructures that attacking (red) and defending (blue) teams must compromise and protect, respectively. The infrastructure can be physically assembled, but much more convenient is to rely on the Infrastructure as a Service (IaaS) paradigm. Although some modern technologies support the IaaS, the design and deployment of scenarios of interest are mostly manual. As a consequence, it is a common practice to have a cyber range hosting few (sometimes only one), consolidated scenarios. However, reusing the same scenario may significantly reduce the effectiveness of the training and testing sessions. In this paper, we propose a framework for automating the definition and deployment of arbitrarily complex cyber range scenarios. The framework relies on the virtual scenario description language (VSDL), i.e., a domain-specific language for defining high-level features of the desired infrastructure while hiding low-level details. The semantics of VSDL is given in terms of constraints that must be satis-fied by the virtual infrastructure. These constraints are then submitted to an SMT solver to check the satisfiability of the specification. If satisfiable, the specification gives rise to a model that is automat-ically converted to a set of deployment scripts to be submitted to the IaaS provider.","Costa, Gabriele;Russo, Enrico;Armando, Alessandro",32067717500;57197855120;57190072464
10.1109/ACCESS.2022.3229124,1,"Federated learning (FL) goes beyond traditional, centralized machine learning by distributing model training among a large collection of edge clients. These clients cooperatively train a global, e.g., cloud-hosted, model without disclosing their local, private training data. The global model is then shared among all the participants which use it for local predictions. This paper proves that FL systems can be turned into covert channels to implement a stealth communication infrastructure. The main intuition is that, during federated training, a malicious sender can poison the global model by submitting purposely crafted examples. Although the effect of the model poisoning is negligible to other participants and does not alter the overall model performance, it can be observed by a malicious receiver and used to transmit a sequence of bits. We mounted our attack on an FL system to verify its feasibility. Experimental evidence shows that this covert channel is reliable, efficient, and extremely hard to counter. These results highlight that our new attacker model threatens FL infrastructures.","Costa, Gabriele;Pinelli, Fabio;Soderi, Simone;Tolomei, Gabriele",32067717500;57223750427;56027760800;12784026600
10.1109/ACCESS.2022.3218412,4,"Modern Intelligent Infrastructures (II) are highly complex, interconnected systems that are now emerging. For instance, II can integrate technologies and processes to provide citizens with faster services and better goods. An average II can include many technologies, e.g., Cloud applications and IoT devices, under different environments, e.g., industry 4.0 production plants and smart buildings. Although II bring concrete benefits to all of these contexts, they also carry security concerns. Reasoning about threats and security exposures that might affect II is non-trivial. This is only partially due to their inherent complexity. As a matter of fact, real II are typically in charge of some critical operations that cannot be interrupted or compromised for experimental purposes. An alternative solution is to rely on digital replicas which can provide a good trade-off between realism and usability. These assets represent a strategic and highly demanded resource for the security community. In this paper, we present HArMoNICS, a case study infrastructure meant to provide a playground for security experts interested in II security. HArMoNICS revolves around a digital replica of a real Smart Polygeneration Microgrid (SPM) located in Italy. Although most of the components are based on or inspired by the real system, HArMoNICS has been enriched with further security-relevant features. As a result, the case study includes vertical use cases focusing on specific security topics. Security researchers can use it to assess the effectiveness of new methodologies, to carry out security training activities, or even to extend it with new elements.","Roascio, Gianluca;Costa, Gabriele;Baccelli, Emmanuel;Malina, Lukas;Matulevicius, Raimundas;Momeu, Marius;Morkevicius, Nerijus;Russo, Enrico;Stojanovic, Branka;Tasidou, Aimilia",57211909186;32067717500;7801392399;49863792100;6507155888;57205441706;35752455800;57197855120;55602888600;25927610700
10.1109/EuroSPW55150.2022.00005,0,,"Costa, Gabriele;Merlo, Alessio",32067717500;15136674200
10.1109/EuroSP53844.2022.00005,0,,"Costa, Gabriele;Merlo, Alessio",32067717500;15136674200
10.4230/OASIcs.Tokenomics.2020.6,3,"Nowadays software is everywhere and this is particularly true for free and open source software (FOSS). Discovering bugs in FOSS projects is of paramount importance and many bug bounty programs attempt to attract skilled analysts by promising rewards. Nevertheless, developing an effective bug bounty program is challenging. As a consequence, many programs fail to support an efficient and fair bug bounty market. In this paper, we present VeriOSS, a novel bug bounty platform. The idea behind VeriOSS is to exploit the blockchain technology to develop a fair and efficient bug bounty market. To this aim, VeriOSS combines formal guarantees and economic incentives to ensure that the bug disclosure is both reliable and convenient for the market actors.","Canidio, Andrea;Costa, Gabriele;Galletta, Letterio",56593183100;32067717500;55260418300
,0,"Malware is a constant threat for the security of devices and users. Successful and automatic malware detection is a critical necessity [1]. Existing malware detection solutions cannot accurately characterize the behavior of a malware and, thereby, they rely on other indicators, e.g., digital signatures. Nevertheless, behavior-based detection is an active field of research since it can deal with zero-day malware. Although many proposals leveraging machine learning (ML) classifiers have been put forward, finding proper behavioral features is still an open problem. Existing solutions typically consider either static or dynamic software features. Static refers to the program syntax while dynamic refers to features observed at runtime. However, both of them suffer from limitations which impact on the effectiveness of the ML classification. Here we follow a different approach. We used symbolic execution to model features that denote the malware behavior in a more precise way. To this aim, we introduce a novel feature specification language called Symbolic Feature Specification Language (SFSL). Each rule precisely models a specific malicious behavior that has been documented in past malware samples. Then, we apply local, bounded symbolic exploration to establish whether a binary under analysis matches the defined rules. Eventually, the result of the rule matching process is used to generate vectors of features for a ML classifier. Our current experiments with different ML classifiers show that this technique can lead to actual improvements of the classification accuracy. Moreover, since behavioral features do not depend on the program syntax, our methodology can even detect threats in new malware samples.","Siwach, Chinmay;Costa, Gabriele;de Nicola, Rocco",57258768000;32067717500;7004298169
,0,"In this paper we present Damn Vulnerable Application Scanner (DVAS), an intentionally flawed network scanner. DVAS allows the user for training against a novel attacker model, recently presented by Valenza et al. [1]. This kind of attack is carried out via malicious HTTP Response messages. Scan reports can be vulnerable to injection attacks, thus putting the browser of the scanner user at risk. To the best of our knowledge, DVAS is the only environment for practicing under the new attacker model. Without proper training and education, this kind of flaws are likely to be neglected by developers and security analysts. As a confirmation, here we even report twelve new vulnerabilities that we discovered in existing scanners while developing one of the challenges of DVAS.","Costa, Gabriele;Russo, Enrico;Valenza, Andrea",32067717500;57197855120;57090187700
10.1145/3368308.3415405,3,"Capture the flag (CTF) events challenge the skills of security experts. Although CTF are competitive events rewarding the winners with prizes and glory, their ultimate goal is to strengthen the competences of the participants. For this reason, they should attract new participants even among beginners. Nevertheless, CTF are often regarded as if they were exclusively for the security specialists. In this paper we introduce A NERD DOGMA as a CTF appetizer. Briefly, A NERD DOGMA is an entry-level CTF combined with an escape room game. The game was implemented as both an on-site facility and an online web application. Here, we describe the two implementations as well as two experiments, one of which carried out during the COVID-19 lockdown. We also discuss the preliminary results and the activities planned after these experiments.","Costa, Gabriele;Lualdi, Martina;Ribaudo, Marina;Valenza, Andrea",32067717500;57219708251;55912502000;57090187700
10.1007/s10817-020-09568-7,0,"Verifying the correctness of a system as a whole requires establishing that it satisfies a global specification. When it does not, it would be helpful to determine which modules are incorrect. As a consequence, specification decomposition is a relevant problem from both a theoretical and practical point of view. Until now, specification decomposition has been independently addressed by the control theory and verification communities through natural projection and partial model checking, respectively. We prove that natural projection reduces to partial model checking and, when cast in a common setting, the two are equivalent. Apart from their foundational interest, our results build a bridge whereby the control theory community can reuse algorithms and results developed by the verification community. Furthermore, we extend the notions of natural projection and partial model checking from finite-state to symbolic transition systems and we show that the equivalence still holds. Symbolic transition systems are more expressive than traditional finite-state transition systems, as they can model large systems, whose behavior depends on the data handled, and not only on the control flow. Finally, we present an algorithm for the partial model checking of both kinds of systems that can be used as an alternative to natural projection.","Costa, Gabriele;Galletta, Letterio;Degano, Pierpaolo;Basin, David;Bodei, Chiara",32067717500;55260418300;7006345611;7003799223;6603107885
10.1016/j.cose.2020.101745,35,"In recent years, the usage of online banking services has considerably increased. To protect the sensitive resources managed by these services against attackers, banks have started adopting Multi-Factor Authentication (MFA). To date, a variety of MFA solutions have been implemented by banks, leveraging different designs and features and providing a non-homogeneous level of security and user experience. Public and private authorities have defined laws and guidelines to guide the design of more secure and usable MFA solutions, but their influence on existing MFA implementations remains unclear. In this work, we present a latitudinal study on the adoption of MFA and the design choices made by banks operating in different countries. In particular, we evaluate the MFA solutions currently adopted in the banking sector in terms of (i) compliance with laws and best practices, (ii) robustness against attacks and (iii) complexity. We also investigate possible correlations between these criteria. Based on this study, we identify a number of lessons learned and open challenges.","Sinigaglia, Federico;Carbone, Roberto;Costa, Gabriele;Zannone, Nicola",57195637569;22333536400;32067717500;9132349400
10.1016/j.cose.2020.101837,21,"Cyber Ranges are complex infrastructures hosting high quality exercises that simulate cybersecurity scenarios of real-world complexity. Building the computing infrastructure is only the first step towards the successful execution of the cyber exercises. The design, verification and deployment of scenarios are costly and error-prone activities. As a matter of fact, a misconfiguration in the scenario can compromise the exercise and the training goals. This makes the design, development, and deployment of live-fire cyber exercises of real-world complexity so expensive that can be afforded only by a limited number of organizations. In this paper we present CRACK, a framework for the (i) design, (ii) model verification, (iii) generation, and (iv) automated testing of cyber scenarios. We introduce the CRACK SDL, a Scenario Definition Language based on TOSCA, an OASIS standard for the specification and orchestration of virtual infrastructures. CRACK SDL allows for the declarative specification of the scenario elements and their interplay, e.g., a vulnerability affecting a system. Through a formal encoding of the properties of an SDL specification, CRACK also supports the automatic verification of a scenario against its training objectives. After a successful verification, the scenario is automatically deployed in the Cyber Range and automatically tested to check the correspondence between the behavior of the deployed system and its specification. The key functionalities offered by CRACK are presented through a simple, yet representative case study. Experimental results confirm the effectiveness of the proposed approach.","Russo, Enrico;Costa, Gabriele;Armando, Alessandro",57197855120;32067717500;57190072464
10.1145/3341105.3373962,15,"Web Application Firewalls are widely used in production environments to mitigate security threats like SQL injections. Many industrial products rely on signature-based techniques, but machine learning approaches are becoming more and more popular. The main goal of an adversary is to craft semantically malicious payloads to bypass the syntactic analysis performed by a WAF. In this paper, we present WAF-A-MoLE, a tool that models the presence of an adversary. This tool leverages on a set of mutation operators that alter the syntax of a pay load without affecting the original semantics. We evaluate the performance of the tool against existing WAFs, that we trained using our publicly available SQL query dataset. We show that WAF-A-MoLE bypasses all the considered machine learning based WAFs.","Demetrio, Luca;Valenza, Andrea;Costa, Gabriele;Lagorio, Giovanni",57205738855;57090187700;32067717500;56618171700
,2,"The first step of every attack is reconnaissance, i.e., to acquire information about the target. A common belief is that there is almost no risk in scanning a target from a remote location. In this paper we falsify this belief by showing that scanners are exposed to the same risks as their targets. Our methodology is based on a novel attacker model where the scan author becomes the victim of a counter-strike. We developed a working prototype, called RevOK, and we applied it to 78 scanning systems. Out of them, 36 were found vulnerable to XSS. Remarkably, RevOK also found a severe vulnerability in Metasploit Pro, a mainstream penetration testing tool.","Valenza, Andrea;Costa, Gabriele;Armando, Alessandro",57090187700;32067717500;57190072464
10.1016/j.softx.2019.100367,2,"Web Application Firewalls (WAFs) are plug-and-play security gateways that promise to enhance the security of a (potentially vulnerable) system with minimal cost and configuration. In recent years, machine learning-based WAFs are catching up with traditional, signature-based ones. They are competitive because they do not require predefined rules; instead, they infer their rules through a learning process. In this paper, we present WAF-A-MoLE, a WAF breaching tool. It uses guided mutational-based fuzzing to generate adversarial examples. The main applications include WAF (i) penetration testing, (ii) benchmarking and (iii) hardening.","Valenza, Andrea;Demetrio, Luca;Costa, Gabriele;Lagorio, Giovanni",57090187700;57205738855;32067717500;56618171700
10.1007/978-3-030-39749-4_9,4,"In recent years, the usage of online services (e.g.,Â banking) has considerably increased. To protect the sensitive resources managed by these services against attackers, Multi-Factor Authentication (MFA) has been widely adopted. To date, a variety of MFA protocols have been implemented, leveraging different designs and features and providing a non-homogeneous level of security and user experience. Public and private authorities have defined laws and guidelines to guide the design of more secure and usable MFA protocols, but their influence on existing MFA implementations remains unclear. We present MuFASA, a tool for high-level specification and analysis of MFA protocols, which aims at supporting normal users and security experts (in the design phase of an MFA protocol), providing a high level report regarding possible risks associated to the specified MFA protocol, its resistance to a set of attacker models (defined by NIST), its ease-of-use and its compliance with a set of security requirements derived from European laws.","Sinigaglia, Federico;Carbone, Roberto;Costa, Gabriele;Ranise, Silvio",57195637569;22333536400;32067717500;6603468509
,0,"Security of software systems is of paramount importance, for both individuals, and the society and its infrastructures. The programs that support our activities must therefore be built robust against attackers. We will briefly survey the methods and the tools offered by programming languages to assist designers and programmers in implementing secure software components. We also discuss the main techniques for verifying the security properties of these components, especially when they are not developed from scratch.","Costa, Gabriele;Degano, Pierpaolo;Galletta, Letterio",32067717500;7006345611;55260418300
10.1109/NCA.2018.8548324,16,"Cyber Ranges are (virtual) infrastructures for the execution of cyber exercises of the highest quality that simulate cyber scenarios of real-world complexity. Building the computing infrastructure is only the first step towards the successful execution of the cyber exercises. The design, validation, and deployment of scenarios are costly and error-prone activities that may require specialized personnel for weeks or even months. Furthermore, a misconfiguration in the resulting scenario can spoil the entire cyber exercise. In this paper, we propose a framework for automating the (i) design, (ii) model validation, (iii) generation and (iv) testing of cyber scenarios. We introduce a Scenario Definition Language (SDL) based on the OASIS Topology and Orchestration Specification for Cloud Applications (TOSCA). SDL allows for the high level, declarative specification of the components and their interplay. We show that SDL specifications can be encoded into Datalog and that this allows for the automatic checking of the resulting model against a set of validation goals. If the check fails, then a design modification process is triggered. Otherwise, the validated scenario can be automatically deployed on the cyber range. The validation proof is then automatically converted into test cases whose successful execution gives evidence that also the deployed scenario meets the validation goals.","Russo, Enrico;Costa, Gabriele;Armando, Alessandro",57197855120;32067717500;57190072464
10.1016/j.future.2016.06.014,11,"The swift and continuous evolution of mobile devices is encouraging both private and public organizations to adopt the Bring Your Own Device (BYOD) paradigm. As a matter of fact, the BYOD paradigm drastically reduces costs and increases productivity by allowing employees to carry out business tasks on their personal devices. However, it also increases the security concerns, since a compromised device could disruptively access the resources of the organization. The current mobile application distribution model based on application markets does not cope with this issue. In a previous work the concept of secure meta-market has been introduced as a mean to distribute mobile applications always guaranteed to comply with any given BYOD policy. This is achieved through a suitable combination of static analysis (i.e. model checking) and code instrumentation techniques. Although crucial, enforcing security policies over individual applications is not sufficient in general. Indeed, several well documented threats arise from the malicious interaction among applications which are harmless if isolated. In this paper, a novel technique for the security verification of groups of mobile app is proposed. The approach relies on partial model checking (PMC) to extend the existing security guarantees to groups of applications. The experimental results demonstrate the viability of the approach. Moreover, we show through a case study that even a fairly simple security policy can be violated by applications which are compliant if considered one by one.","Costa, Gabriele;Merlo, Alessio;Verderame, Luca;Armando, Alessandro",32067717500;15136674200;55315179600;57190072464
10.1007/978-3-319-89960-2_19,2,"Specification decomposition is a theoretically interesting and practically relevant problem for which two approaches were independently developed by the control theory and verification communities: natural projection and partial model checking. In this paper we show that, under reasonable assumptions, natural projection reduces to partial model checking and, when cast in a common setting, the two are equivalent. Aside from their theoretical interest, our results build a bridge whereby the control theory community can reuse algorithms and results developed by the verification community. In addition, we present an algorithm and a tool for the partial model checking of finite-state automata that can be used as an alternative to natural projection.","Costa, Gabriele;Basin, David;Bodei, Chiara;Degano, Pierpaolo;Galletta, Letterio",32067717500;7003799223;6603107885;7006345611;55260418300
10.1016/B978-0-12-804603-6.00011-5,0,"Mobile applications, aka apps, mark the perimeter of the ecosystems of many service providers. Thus, their security assessment is crucial for any company aiming at protecting both customer data and other strategic assets. In fact, software analysts face an extremely hard problem due to, for example, continuous and fast development of new apps and the specific threat model of their organizations. For these reasons, new methodologies and tools are urgently required to drive and possibly automatize the process.In the last years, Poste Italiane carried out several initiatives to reduce the security incidents response time. More recently, MAVeriC was proposed as a unified security analysis platform for Android apps. MAVeriC was designed to achieve a seamless integration of both dynamic and static analysis techniques.In this chapter we present the integration of MAVeriC within the industrial business processes of Poste Italiante. We show how MAVeriC contributed to improve the effectiveness and efficiency of the threat identification as well as the reaction procedures. In particular, we discuss how the automatic security analysis was exploited for two distinct activities. Finally, we describe the application of MAVeriC to a case study involving a real-world application. Such case study is also important for identifying and discussing current limitations and future directions of this research line.","Costa, Gabriele;Armando, Alessandro;Verderame, Luca;Biondo, Daniele;Bocci, Gianluca;Mammoliti, Rocco;Toma, Alessandra",32067717500;57190072464;55315179600;24330958200;56465594900;18935973300;57201523966
10.1007/978-3-319-66284-8_34,2,"In this paper we present PolEnA, an extension of the Android Security Framework (ASF). PolEnA enables a number of features that are not currently provided by the ASF. Among them, PolEnA allows for the definition of fine-grained security policies and their dynamic verification. The runtime enforcement of the policies is supported by a state-of-the-art SAT solver. One of the main features of our approach is the low invasiveness as it does not require modifications to the operating system.","Costa, Gabriele;Sinigaglia, Federico;Carbone, Roberto",32067717500;57195637569;22333536400
10.5220/0006438504800485,2,"The modern, smart society needs a reliable and trustworthy access to the internet of services. Strong authentication mechanisms promise to rise the bar of security and they are polarizing the attention of both institutional and industrial stakeholders. In this survey, we take stock of the strong authentication mechanisms used by e-Banking services in terms of regulations and implementations. To this aim, we reviewed the EU regulations and their evolution in the last decade and we analyzed the strong authentication mechanisms implemented by 26 major EU and non-EU banks.","Sinigaglia, Federico;Carbone, Roberto;Costa, Gabriele",57195637569;22333536400;32067717500
10.1016/j.pmcj.2016.01.006,6,"Android has a layered architecture that allows applications to leverage services provided by the underlying Linux kernel. However, Android does not prevent applications from directly triggering the kernel functionalities through system call invocations. As recently shown in the literature, this feature can be abused by malicious applications and thus lead to undesirable effects. The adoption of SEAndroid in the latest Android distributions may mitigate the problem. Yet, the effectiveness of SEAndroid to counter these threats is still to be ascertained. In this paper we present an empirical evaluation of the effectiveness of SEAndroid in detecting malicious interplays targeted to the underlying Linux kernel. This is done by extensively profiling the behavior of honest and malicious applications both in standard Android and SEAndroid-enabled distributions. Our analysis indicates that SEAndroid does not prevent direct, possibly malicious, interactions between applications and the Linux kernel, thus showing how it can be circumvented by suitably-crafted system calls. Therefore, we propose a runtime monitoring enforcement module (called Kernel Call Controller) which is compatible both with Android and SEAndroid and is able to enforce security policies on kernel call invocations. We experimentally assess both the efficacy and the performance of KCC on actual devices.","Merlo, Alessio;Costa, Gabriele;Verderame, Luca;Armando, Alessandro",15136674200;32067717500;55315179600;57190072464
10.1109/ICMCIS.2016.7496587,5,"Mobile devices have an important role to play in the private as well as the professional activities of working people. However, their use can pose a serious threat to the security of the working environment. Many organizations therefore establish a specific bring your own device (BYOD) policy. This paper presents a proposal for how to foster a secure, policy-aware BYOD work environment. Our solution involves enforcement of fine-grained security policies for personal devices while relieving owners of having to make critical decisions and take responsibility for behavior of applications installed on their devices. We report our experience in developing and applying a security policy based on the existing guidelines of the NATO Communications and Information Agency (NCI Agency).","Armando, Alessandro;Costa, Gabriele;Merlo, Alessio;Verderame, Luca;Wrona, Konrad",57190072464;32067717500;15136674200;55315179600;57188669217
10.1145/2897845.2897887,0,"Mobile code distribution relies on digital signatures to guarantee code authenticity. Unfortunately, standard signature schemes are not well suited for use in conjunction with program transformation techniques, such as aspect-oriented programming. With these techniques, code development is performed in sequence by multiple teams of programmers. This is fundamentally different from traditional single-developer/ single-user models, where users can verify end-to-end (i.e., developer-to-user) authenticity of the code using digital signatures. To address this limitation, we introduce FLEX, a exible code authentication framework for mobile applications. FLEX allows semi-trusted intermediaries to modify mobile code without invalidating the developer's signature, as long as the modification complies with a ""contract"" issued by the developer. We introduce formal definitions for secure code modification, and show that our instantiation of FLEX is secure under these definitions. Although FLEX can be instantiated using any language, we design AMJ - a novel programming language that supports code annotations - and implement a FLEX prototype based on our new language.","Costa, Gabriele;Gasti, Paolo;Merlo, Alessio;Yu, Shung Hsi",32067717500;26428760400;15136674200;57190395470
10.1145/2808783.2808786,1,"The security assessment of mobile applications is of paramount importance for both the service providers and their customers. As a matter of fact, nowadays smartphones are the primary access mean for the internet of services. Needless to say, malicious or awed applications can disruptively compromise the sensitive data they handle. As a major stakeholder, Poste Italiane has invested a considerable amount of resources for new analysis tools. One of them is the MAVeriC platform. The goal of MAVeriC is to implement a unified service which takes advantage of the state-of-the-art technologies for creating detailed risk profiles of mobile applications. In this paper we present the Dynamic Analysis Module (DAM) of the MAVeriC platform. Briefly, its objective is to interact with a running Android application for inferring as much information as possible about its behavior. The interaction is carried out by simulating the activity of the user. In the meanwhile, monitoring modules observe the operations executed by the application, i.e., network usage and file access. Finally, a modeling module factorizes the gathered information for providing the analysis with an abstract representation of the application behavior.","Armando, Alessandro;Bocci, Gianluca;Costa, Gabriele;Mammoliti, Rocco;Merlo, Alessio;Ranise, Silvio;Traverso, Riccardo;Valenza, Andrea",57190072464;56465594900;32067717500;18935973300;15136674200;6603468509;53364493900;57090187700
10.1109/CSF.2015.29,14,"The Android Security Framework controls the executions of applications through permissions which are statically granted by the user during installation. However, the definition of security policies over permissions is not supported. Security policies must be therefore manually encoded into the application by the developer, which is a dangerous practice and may cause security breaches. We propose an improvement over the Android permission system that supports the specification and enforcement of fine-grained security policies. Enforcement is achieved by reducing policy decision problems to propositional satisfiability and leveraging a state-of-the-art SAT solver. Unlike alternative proposals, our approach does not require changes in the operating system and, therefore, it can be readily deployed in any commercial device.","Armando, Alessandro;Carbone, Roberto;Costa, Gabriele;Merlo, Alessio",57190072464;22333536400;32067717500;15136674200
10.1007/s10207-014-0252-y,7,"The emerging Bring Your Own Device (BYOD) paradigm is pushing the adoption of employeesâ€™ personal mobile devices (e.g., smartphones and tablets) inside organizations for professional usage. However, allowing private, general purpose devices to interact with proprietary, possibly critical infrastructures enables obvious threats. Unfortunately, current mobile OSes do not seem to provide adequate security support for dealing with them. In this paper, we present a formal modeling and assessment of the security of mobile applications. In particular, we propose a security framework for verifying and enforcing BYOD security policies on Android devices. Interestingly, our approach is non-invasive and only requires minor platform modifications at application level. Finally, we provide empirical evidence of the practical feasibility of the approach by means of a prototype which we used to validate a set of real Android applications.","Armando, Alessandro;Costa, Gabriele;Merlo, Alessio;Verderame, Luca",57190072464;32067717500;15136674200;55315179600
10.4018/978-1-4666-8111-8.ch024,0,"In these last years, mobile devices, such as mobile phones and tablets, have become very popular. Moreover, mobile devices have become very powerful and commonly run fairly complex applications such as 3D games, Internet browsers, e-mail clients, social network clients, and many others. Hence, an adequate security support is required on these devices to avoid malicious application damage or unauthorized accesses to personal data (such as personal contacts or business email). This chapter describes the security support of the current commercial mobile devices along with a set of approaches that have been proposed in the scientific literature to enhance the security of mobile applications.","Costa, Gabriele;Lazouski, Aliaksandr;Martinelli, Fabio;Mori, Paolo",32067717500;26644852600;7006394072;15127782100
10.1007/978-3-319-25527-9_14,1,"Local policies have been proposed in [6] as a formalism for efficient and effective policy verification and enforcement. The basic approach consists of an enriched syntax of a programming language with a scope operator that the developer uses to apply a local policy to a specific portion of her code. Due to their fair expressiveness and modularity, they have been successfully applied also to object-orienter languages and web services. In this paper we apply the existing approach to the Android application framework. To this aim, we present a novel programming language, namely Î», which includes both the Android IPC logic and local policies.","Costa, Gabriele",32067717500
10.1007/978-3-662-46681-0_19,5,"The tremendous success of the mobile application paradigm is due to the ease with which new applications are uploaded by developers, distributed through the application markets (e.g. Google Play), and finally installed by the users. Yet, the very same model is causing serious security concerns, since users have no or little means to ascertain the trustworthiness of the applications they install on their devices. To protect their customers, Poste Italiane has defined the Mobile Application Verification Cluster (MAVERIC), a process for the systematic security analysis of third-party mobile apps that leverage the online services provided by the company (e.g. home banking, parcel tracking). We present SAM, a toolkit that supports this process by automating a number of operations including reverse engineering, privilege analysis, and automatic verification of security properties. We introduce the functionalities of SAM through a demonstration of the platform applied to real Android applications.","Armando, Alessandro;Bocci, Gianluca;Chiarelli, Giantonio;Costa, Gabriele;De Maglie, Gabriele;Mammoliti, Rocco;Merlo, Alessio",57190072464;56465594900;56465486600;32067717500;56466055000;18935973300;15136674200
,5,"The success of the mobile application model is mostly due to the ease with which new applications are uploaded by developers, distributed through the application markets (e.g. Google Play), and installed by users. Yet, the very same model is cause of serious security concerns, since users have no or little means to ascertain the trustworthiness of the applications they install on their devices. Such concerns grow up when dealing with professional scenarios like the use of mobile devices within organisations. To protect their customers, Poste Italiane has defined the Mobile Application Verification Cluster (MAVeriC), a process for the systematic security analysis of third-party mobile apps leveraging their online services (e.g. home banking, parcel tracking). MAVeriC is an ongoing project that will be completed in the next few years. At the core of the MAVeriC project lies the Static Analysis Module (SAM), a toolkit that supports automatic static analysis of mobile applications by automating a number of operations including reverse engineering, privilege analysis and automatic verification of security properties. In this paper we present the SAM that has been fully developed and tested. We introduce the functionalities of SAM through a demonstration of the platform applied to real Android applications.","Armando, Alessandro;Bocci, Gianluca;Chiarelli, Giantonio;Costa, Gabriele;De Maglie, Gabriele;Mammoliti, Rocco;Merlo, Alessio",57190072464;56465594900;56465486600;32067717500;56466055000;18935973300;15136674200
10.4018/978-1-4666-6359-6.ch022,0,"In these last years, mobile devices, such as mobile phones and tablets, have become very popular. Moreover, mobile devices have become very powerful and commonly run fairly complex applications such as 3D games, Internet browsers, e-mail clients, social network clients, and many others. Hence, an adequate security support is required on these devices to avoid malicious application damage or unauthorized accesses to personal data (such as personal contacts or business email). This chapter describes the security support of the current commercial mobile devices along with a set of approaches that have been proposed in the scientific literature to enhance the security of mobile applications.","Costa, Gabriele;Lazouski, Aliaksandr;Martinelli, Fabio;Mori, Paolo",32067717500;26644852600;7006394072;15127782100
10.4018/978-1-4666-6178-3.ch021,1,"The pervasiveness of Web services increases the necessity for consumers to access and use them in a secure way. Besides secure communications, consumer security also involves providing strong guarantees that a requested security policy is satisfied. Needless to say, remote services are adverse to most techniques of analysis and control that usually require direct access to either the implementation or the execution. In this chapter, the authors classify service execution paradigms and provide a characterization of the security threats that may affect a Web service infrastructure depending on the elements composing it. In particular, the authors provide a discussion of the threat models for several different Web service paradigms involving service consumers, providers, and platforms, and illustrate how and when contract-based security approaches and its variants can be applied for mitigating risks in service integrations in the identified paradigms.","Costa, Gabriele;Mandati, Roberto;Martinelli, Fabio;Matteucci, Ilaria;Yautsiukhin, Artsiom",32067717500;55848614000;7006394072;15835201800;23096764700
10.1145/2627393.2627410,24,"Mobile security is a hot research topic. Yet most of available techniques focus on securing individual applications and therefore cannot possibly tackle security weaknesses stemming from the combined use of one or more applications (e.g. confused deputy attacks). Preventing these types of attacks is crucial in many important application scenarios. For instance, their prevention is a prerequisite for the widespread adoption of the BYOD paradigm in the corporate setting. To this aim, in this paper we propose a secure meta-market which supports the specification and enforcement of security policies spanning multiple applications. Moreover, the meta-market keeps track of the security state of devices and -through a functional combination of static analysis and code instrumentation techniques- supervises the installation of new applications thereby ensuring the enforcement of the security policies. Also, we developed a prototype implementation of the secure meta-market and we used it for validating a wide range of popular Android applications against a security policy drawn from the US Government BYOD Security Guidelines. Experimental results obtained by running the prototype confirm the effectiveness of the approach. Â© 2014 ACM.","Armando, Alessandro;Costa, Gabriele;Merlo, Alessio;Verderame, Luca",57190072464;32067717500;15136674200;55315179600
,0,"Web services composition allows a software designer for combining atomic services, for instance taken from a marketplace, in a complex business process fulfilling a desired functional goal. Moreover, among a large number of possible compositions, the designer may want to consider only those which satisfy specific non-functional requirements. In our work we consider verification of security properties and evaluation quantitative security metrics in a single framework. The main focus of this article is the verification of a composition with several security metrics at once. We provide a general solution for the problem and show how such verification can be made more efficient in specific cases (e.g., when a metric is an abstraction of another one). We employ a mathematical structure called c-semirings granting the generality of our approach. Â© Springer International Publishing Switzerland 2014.","Costa, Gabriele;Martinelli, Fabio;Yautsiukhin, Artsiom",32067717500;7006394072;23096764700
10.1109/MC.2014.164,25,"The current mobile application distribution model cannot cope with the complex security requirements of the emerging 'bring your own device' (BYOD) paradigm. A secure metamarket architecture supports the definition and enforcement of BYOD policies and offers a promising prototype implementation tested under realistic conditions. The Web extra at http://youtu.be/0hEJoGhzczs is a video slideshow discussing BYODroid, an implementation of a secure meta-market dealing specifically with the Android OS. A secure meta-market is an extension of the current mobile application distribution paradigm supporting the definition and enforcement of 'Bring Your Own Device' policies on personal devices. BYODroid automatically retrieves application packages from Android stores and formally verifies whether such applications comply with a given formal BYOD policy, thereby allowing the installation of policy-compliant applications only. The presentation briefly explains the idea behind the secure meta-market model and provides an experimental assessment of BYODroid. Â© 2014 IEEE.","Armando, Alessandro;Costa, Gabriele;Verderame, Luca;Merlo, Alessio",57190072464;32067717500;55315179600;15136674200
10.1007/978-3-642-38004-4_3,8,"Security controllers follow the execution of the target systems to prevent security violations. In fact, by proactively observing the target, they are able to catch security violations before they occur and act consequently, such as by interrupting the execution. In this paper we define a novel category of security controllers called lazy controllers, a conservative extension of standard controllers which routinely suspend the observation of the target for different time spans, in order to reduce the cost of monitoring and increase performance, at the expense of the possibility of missing a violation. We show how a proactive truncation controller can be extended to the lazy setting, and we formally characterize the relation between the length of suspended time spans and the actual violation risk, which constitutes the formal ground of our approach. This allows the actual time of suspension to be determined according to a given maximum bearable risk. Precisely, we formally investigate three classes of systems, namely non-deterministic, probabilistic, and stochastic systems. Â© Springer-Verlag Berlin Heidelberg 2013.","Caravagna, Giulio;Costa, Gabriele;Pardini, Giovanni",56497236700;32067717500;56617210000
10.1007/978-3-642-41157-1_5,25,"Android OS is currently the most widespread mobile operating system and is very likely to remain so in the near future. The number of available Android applications will soon reach the staggering figure of 500,000, with an average of 20,000 applications being introduced in the Android Market over the last 6 months. Since many applications (e.g., home banking applications) deal with sensitive data, the security of Android is receiving a growing attention by the research community. However, most of the work assumes that Android meets some given high-level security goals (e.g. sandboxing of applications). Checking whether these security goals are met is therefore of paramount importance. Unfortunately this is also a very difficult task due to the lack of a detailed security model encompassing not only the interaction among applications but also the interplay between the applications and the functionalities offered by Android. To remedy this situation in this paper we propose a formal model of Android OS that allows one to formally state the high-level security goals as well as to check whether these goals are met or to identify potential security weaknesses. Â© 2013 Springer-Verlag.","Armando, Alessandro;Costa, Gabriele;Merlo, Alessio",57190072464;32067717500;15136674200
10.1145/2480362.2480707,44,"Modern mobile devices offer users powerful computational capabilities and complete customization. As a matter of fact, today smartphones and tablets have remarkable hardware profiles and a cornucopia of applications. Yet, the security mechanisms offered by most popular mobile operating systems offer only limited protection to the threats posed by malicious applications that may be inadvertently installed by the users and therefore they do not meet the security standards required in corporate environments. In this paper we propose a security framework for mobile devices that ensures that only applications complying with the organization security policy can be installed. This is done by inferring behavioral models from applications and by validating them against the security policy. We also present BYODroid, a prototype implementation of our proposed security framework for the Android OS. Copyright 2013 ACM.","Armando, Alessandro;Costa, Gabriele;Verderame, Luca;Merlo, Alessio",57190072464;32067717500;55315179600;15136674200
10.1007/978-3-642-36818-9_52,3,"Nowadays web services pervade the network experience of the users. Indeed, most of our activities over the internet consist in accessing remote services and interact with them. Clearly, this can happen only when two elements are available: (i) a compatible device and (ii) a suitable network connection. The recent improvement of the computational capabilities of mobile devices, e.g., tablets and smartphones, seriously mitigated the first aspect. Instead, the inappropriateness, or even the absence, of connectivity is still a major issue. Although mobile, third generation (3G) networks can provide basic connectivity, complex interactions with web services often require different levels of Quality of Service (QoS). Also, 3G connectivity is only available in certain areas, e.g., user's country, and purchasing temporary connection abroad can be very costly. These costs weigh down on the original service price, seriously impacting the web service business model. In this paper we describe the problems arising when considering the orchestration of service-oriented opportunistic networks and we present the assumptions that we want to consider in our context. We claim that our model is realistic mainly for two reasons: (i) we consider state-of-the-art technology and technical trends and (ii) we refer to a concrete problem for service providers. Â© 2013 Springer-Verlag.","Armando, Alessandro;Castiglione, Aniello;Costa, Gabriele;Fiore, Ugo;Merlo, Alessio;Verderame, Luca;You, Ilsun",57190072464;16027997000;32067717500;8895749600;15136674200;55315179600;14038401900
10.4204/EPTCS.104.4,1,"Secure orchestration is an important concern in the internet of service. Next to providing the required functionality the composite services must also provide a reasonable level of security in order to protect sensitive data. Thus, the orchestrator has a need to check whether the complex service is able to satisfy certain properties. Some properties are expressed with metrics for precise definition of requirements. Thus, the problem is to analyse the values of metrics for a complex business process. In this paper we extend our previous work on analysis of secure orchestration with quantifiable properties. We show how to define, verify and enforce quantitative security requirements in one framework with other security properties. The proposed approach should help to select the most suitable service architecture and guarantee fulfilment of the declared security requirements.","Costa, Gabriele;Martinelli, Fabio;Yautsiukhin, Artsiom",32067717500;7006394072;23096764700
10.1109/IMIS.2012.186,1,"Lazy controllers are a class of execution monitors that do not continuously observe the behaviour of their target. Monitors are activated and deactivated according to a scheduling strategy. When a lazy controller is activated, it checks the current security state and, in case of a violation, terminates the execution. Instead, if the current execution trace is safe, the monitor is suspended and its activation is scheduled again. The inactivity period is computed by considering the risk that, from the current state, the target can reach a faulty configuration. This behaviour is particularly interesting for systems which is difficult to monitor with standard solutions, e.g., web services. In this paper we present a prototype using existing logging API, i.e., the Commons Logging Package, for remotely watching the execution of OSGi bundles. We claim that our solution can efficiently follow the target system keeping under control the delay in detecting violations. Also, as we use standard OSGi platform and facilities, we show that our monitors can run under very realistic assumptions in the context of web services. Â© 2012 IEEE.","Caravagna, Giulio;Costa, Gabriele;Wiegand, Luca;Pardini, Giovanni",56497236700;32067717500;55349482800;56617210000
10.3233/JCS-2011-0430,3,"Service Oriented Computing (SOC) is a programming paradigm aiming at characterising Service Networks. Services are entities waiting for requests from clients and they often result from the composition of many (sub-)services. We address here the problem of statically guaranteeing security of open services, i.e., services with unknown components. Security constraints are expressed by policies that service components must obey. We present here a type and effect system that safely over-approximates the possible run-time behaviour of open services, collecting partial information on the behaviour of their components. From such an approximation, we then extract a (partial) plan that drives executions of an open system that raises no security violations when plugged in any context. Â© 2012 - IOS Press and the authors. All rights reserved.","Costa, Gabriele;Degano, Pierpaolo;Martinelli, Fabio",32067717500;7006345611;7006394072
10.1016/j.camwa.2011.08.046,5,"Security and trust represent two different perspectives on the problem of guaranteeing the correct interaction among software components. Gate automata have been proposed as a formalism for the specification of both security and trust policies in the scope of the Security-by-Contract-with-Trust (SÃ—CÃ—T) framework. Indeed, they watch the execution of a target program, possibly modifying its behaviour, and produce a feedback for the trust management system. The level of trust changes the environment settings by dynamically activating/deactivating some of the defined gate automata. The goal of this paper is to present gate automata and to show a gate automata-driven strategy for the run-time enforcement in the SÃ—CÃ—T. Â© 2011 Elsevier Ltd. All rights reserved.","Costa, Gabriele;Matteucci, Ilaria",32067717500;15835201800
10.4018/978-1-60960-747-0.ch012,0,"In these last years, mobile devices, such as mobile phones or Personal Digital Assistants, became very popular among people. Moreover, mobile devices became also very powerful, and most of them are also able to execute applications, such as games, Internet browsers, e-mail clients, and so on. Hence, an adequate security support is required on these devices, to avoid that malicious applications damage the device or perform unauthorized accesses to personal data (such as the contact list). This chapter describes the approaches that have been proposed in scientific literature to guarantee the security of mobile devices. Â© 2012, IGI Global.","Costa, Gabriele;Lazouski, Aliaksandr;Martinelli, Fabio;Mori, Paolo",32067717500;26644852600;7006394072;15127782100
10.1109/IMIS.2011.88,3,"In this paper we introduce the notion of gate automata for describing security policies. This new kind of automata aim at defining a model for the specification of both security and trust policies. The main novelty of our proposal is a unified framework for the integration of security enforcement and trust monitoring. Indeed, gate automata watch the execution of a target program, possibly modifying its behaviour, and produce a feedback for the trust management system. The level of trust changes the environment settings by dynamically activating/deactivating some of the defined gate automata. Â© 2011 IEEE.","Costa, Gabriele;Matteucci, Ilaria",32067717500;15835201800
10.1145/2000259.2000283,0,"In this paper we present a novel formalism for defining properties over linear execution traces, namely elective temporal logic (ETL). Differently from several other temporal logics, ETL is not dedicated to a specific time model, e.g. discrete time or real time. Hence, properties can be applied to each temporal context with no changes to the specified formulas. Moreover, the ETL denotational semantics is given through elective functions. In this way we map formulas into the characteristic functions of a set of accepted traces, i.e. the valid executions. A further contribution of this work is an application of ETL to runtime monitoring. As a matter of fact, using a security monitor driven by an ETL formula, we can ignore irrelevant security actions performed by the guarded program reducing the monitor workload. Â© 2011 ACM.","Costa, Gabriele;Matteucci, Ilaria",32067717500;15835201800
10.1007/978-3-642-21455-4_12,1,"Security and Trust offer two different prospectives on the problem of the correct interaction among software components. For many aspects, they represent complementary viewpoints. Moreover, in the study of the verification of non-functional properties of programs they represent a mainstream. Several security aspects, e.g., access control, could be based also on trust and, vice versa, trust models could update the level of trust of a (component of a ) system according to the satisfaction of a particular security policies. According to that, here we present the Security-by-Contract-with-Trust framework, SxCxT for short. It has been developed considering a system platform that has to execute an application whose developer is unknown in such a way that security policies set on it are not violated. The SxCxT mechanism is driven by both security and trust aspects. It is based of three main concepts: the application code, the application contract, and the system security policy The level of trust we consider measures the adherence of the application code to its contract, i.e., if the code respects its contract then the application is trusted, otherwise its level of trust decreases. According to the level of trust of the application, SxCxT decides if check the contract against the policies and if the answer is positive, execute the application just monitoring its contract, or directly enforce the security policy set on the platform. In order to better describe how the proposed mechanism works, we present its application to a mobile application marketplace scenarios. In this way we are also able to show its possible advantages in terms of performances and modularity. Â© 2011 Springer-Verlag.","Costa, Gabriele;Issarny, ValÃ©rie;Martinelli, Fabio;Matteucci, Ilaria;Saadi, Rachid",32067717500;6701338436;7006394072;15835201800;23092361900
10.1016/j.sysarc.2010.09.001,3,"Service Oriented Computing is a paradigm for creating a fully compositional service infrastructure. Compositionality makes security issues difficult to establish. As a matter of fact, defining global security properties on distribute, large-scale network seems to have little or even no sense at all. In a recent proposal, every single service specify its ad hoc security policies that are applied to (parts of) programs or services. These are called local policies and are amenable for developers. They are specified using a simple automaton-like structure, they offer full compositionality (through scope nesting) and a direct enforcing through a corresponding execution monitor. Compliance w.r.t. local policies is statically verified against a superset of the possible program execution traces, namely a history expression. History expressions for services are obtained through a type and effect system and then model checked for validity. A valid history expression only contains traces that never rise policy exceptions. Such history expressions drive the synthesis of composition plans, i.e. safe service orchestration. In this paper this approach is extended to work also on open networks, i.e. networks that are only partially specified. This allows one to compose services in a bottom-up fashion, while guaranteeing their correctness by construction. The potential, practical impact of our proposal is shown by applying it to a well known case study. Â© 2010 Elsevier B.V. All rights reserved.","Costa, Gabriele;Degano, Pierpaolo;Martinelli, Fabio",32067717500;7006345611;7006394072
10.1007/978-3-642-16074-5_4,2,"Service Oriented Computing (SOC) is a programming paradigm aiming at characterising Service Networks. Services are entities waiting for clients requests and they often result from the composition of many services. We address here the problem of statically guaranteeing security of open services, i.e. services with unknown components. Security constraints are expressed by local policies that service components must obey. We present here a type and effect system that safely over-approximates, in the form of history expressions, the possible run-time behaviour of open services, collecting partial information on the behaviours of their components. From a history expression, we then extract a plan that drives executions that never rise security violations. Finally, we show how partial plans satisfying security requirements can be put together to obtain a safe orchestration plan. Â© 2010 Springer-Verlag.","Costa, Gabriele;Degano, Pierpaolo;Martinelli, Fabio",32067717500;7006345611;7006394072
10.1109/CISIS.2010.33,20,"Security-by-Contract (S x C) is a paradigm providing security assurances for mobile applications. In this work, we present an extension of S x C enriched with an automatic trust management infrastructure. Indeed, we enhance the already existing architecture by adding new modules and configurations for contracts managing. At deploy-time, our system decides the run-time configuration depending on the credentials of the contract provider. Roughly, the run-time environment can both enforce a security policy and monitor the declared contract. According to the actual behaviour of the running program our architecture updates the trust level associated with the contract provider. The main advantage of this method is an automatic management of the level of trust of software and contract releasers. Â© 2010 IEEE.","Costa, Gabriele;Dragoni, Nicola;Lazouski, Aliaksandr;Martinelli, Fabio;Massacci, Fabio;Matteucci, Ilaria",32067717500;8308455900;26644852600;7006394072;55167501300;15835201800
10.1016/j.cose.2009.07.005,15,"Many modern mobile devices, such as mobile phones or Personal digital assistants (PDAs), are able to run Java applications, such as games, Internet browsers, chat tools and so on. These applications perform some operations on the mobile device, that are critical from the security point of view, such as connecting to the Internet, sending and receiving SMS messages, connecting to other devices through the Bluetooth interface, browsing the user's contact list, and so on. Hence, an adequate security support is required to protect the device from malicious applications. This paper proposes an enhanced security support for next generation Java Micro Edition platform. This support performs a runtime monitoring of the operations performed by the Java applications, and enforces a security policy that defines which operations applications are allowed to perform. Two possible design approaches for the security support are presented and compared. Â© 2009 Elsevier Ltd. All rights reserved.","Costa, Gabriele;Martinelli, Fabio;Mori, Paolo;Schaefer, Christian;Walter, Thomas",32067717500;7006394072;15127782100;27268030900;57193815214
,17,"Security-by-Contract (SÃ—C) is a paradigm providing security assurances for mobile applications. In this work, we present the an extension of SÃ—C, called Security-by-Contract-with-Trust (SÃ—CÃ—T). Indeed, we enrich the SÃ—C architecture by integrating a trust model and adding new modules and configurations for managing contracts. Indeed, at deploy-time, our system decides the run-time configuration depending on the credentials of the contract provider. The run-time environment can both enforce a security policy and monitor the declared contract. According to the actual behaviour of the running program our architecture updates the trust level associated with the contract provider. We also present a possible application of our framework in the scenario of a mobile application marketplace, e.g., Apple AppStore, Cydia, Android Market, that, nowadays, are considered as one of the most attractive e-commerce activity for both mobile application developers and industries of mobile devices. Since the number of applications increases, Mobile Applications Marketplace (MAMp) sets up recommendation systems that rank and highlight mobile applications by category, social activity, etc. The SÃ—CÃ—T framework we propose is applied in this scenario for providing security on customers' mobile devices as well as help Mobile Applications Marketplaces to enhance their recommendation systems with security feedback. The main advantage of this method is an automatic management of the level of trust of software and contract releasers and a unified way for dealing with both security and trust.","Costa, Gabriele;Lazouski, Aliaksandr;Martinelli, Fabio;Matteucci, Ilaria;Issarny, VaÄºerie;Saadi, Rachid;Dragoni, Nicola;Massacci, Fabio",32067717500;26644852600;7006394072;15835201800;6701338436;23092361900;8308455900;55167501300
10.1109/SEEFM.2009.13,2,"Local policies represent security properties that are applied to (parts of) programs or services. They are amenable for developers since they provide for a full compositionality (through scope nesting), for a simple, automaton-like structure and for a direct enforcing through a corresponding execution monitor. Compliance w.r.t. local policies is statically verified against a safe over-approximation of all the possible execution traces, namely a history expression. Given a service, a safe type and effect system extracts a history expression, from which a viable composition plan can be automatically produced. Viable plans drive executions that never rise policy exceptions. Our main contribution consists in defining a type and effect system that also deals with open systems. We extend the syntax of a service-oriented version of the Î»- calculus, namely Î»req, with resources and external branching operators. Then, we safely over-approximate the possible run-time behaviour of services collecting partial information on the relationship between the program flow and the actual resources. Indeed, the history expressions obtained in this way are compact, rather accurate and able to derive viable plans in most cases. Â© 2009 IEEE.","Costa, Gabriele;Degano, Pierpaolo;Martinelli, Fabio",32067717500;7006345611;7006394072
10.1145/1710035.1710070,8,"In this paper we present a prototype for parental control that detects images with adult content received on a mobile device. More specifically, the application that we developed is able to intercept images received through various communication channels (bluetooth, MMS) on mobile devices based on the Symbian#8482; operating systems. Once intercepted, the images are analysed by the component of the system that automatically classify images with explicit sexual content. At the current stage the application that intercept images runs on the mobile device, the classifier runs on a remote server. Copyright Â© 2009 ACM.","Amato, Giuseppe;Bolettieri, Paolo;Costa, Gabriele;La Torre, Francesco;Martinelli, Fabio",35963890600;15041661900;32067717500;57206230567;7006394072
10.1016/j.entcs.2009.11.020,5,"We present Jalapa, a tool for securing Java bytecode programs with history-based usage policies. Policies are defined by usage automata, that recognize the forbidden execution histories. Usage automata are expressive enough to allow programmers specify of many real-world usage policies; yet, they are simple enough to permit formal reasoning. Programmers can sandbox untrusted pieces of code with usage policies. The Jalapa tool rewrites the Java bytecode by adding the hooks for the mechanism that enforces the given policies at run-time. Â© 2009 Elsevier B.V. All rights reserved.","Bartoletti, Massimo;Costa, Gabriele;Zunino, Roberto",9536042900;32067717500;8382815000
10.5381/jot.2009.8.4.a1,17,"We propose an extension to the security model of Java, that allows for specifying, analysing and enforcing history-based usage policies. Policies are dened by usage automata, that recognize the forbidden execution histories. Programmers can sandbox an untrusted piece of code with a policy, which is enforced at run-time through its local scope. A static analysis allows for optimizing the execution monitor: only the policies not guaranteed to be always obeyed will be enforced at run-time. Â©JOT, 2009.","Bartoletti, Massimo;Costa, Gabriele;Degano, Pierpaolo;Martinelli, Fabio;Zunino, Roberto",9536042900;32067717500;7006345611;7006394072;8382815000
